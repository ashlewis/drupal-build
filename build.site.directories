#!/bin/bash

# This script creates required directories and sets correct permissions
# it should be run from your new site root directory with:
# $ ./build/build.site.drupal

# read config
DIR="$( cd -P "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

. $DIR/build.site.conf.incl

# if password is passed as arg from parent script - use that, otherwise - request user entry
if [[ -n $1 ]]; then
    sudoPassword=$1
fi

if [[ -z $sudoPassword ]]; then
    echo "Enter root user password (for sudo)"
    read -s sudoPassword
fi

# file system
echo $sudoPassword | sudo -S chown -R $linuxDevUser:$linuxApacheUser $devRootDir/$webDir


if [[ -d $devRootDir/$webDir/sites/default/files ]]; then
    echo $sudoPassword | sudo -S chown -R $linuxApacheUser:$linuxDevUser $devRootDir/$webDir/sites/default/files
fi

if [[ ! -d $devRootDir/sites ]]; then
    mv $devRootDir/$webDir/sites $devRootDir/
else 
    rm -rf $devRootDir/$webDir/sites
fi

ln -s $devRootDir/sites $devRootDir/$webDir/sites

if [[ ! -d $devRootDir/profiles ]]; then
    mv $devRootDir/$webDir/profiles $devRootDir/
else 
    rm -rf $devRootDir/$webDir/profiles
fi

ln -s $devRootDir/profiles $devRootDir/$webDir/profiles

mkdir $devRootDir/$privateDir
mkdir $devRootDir/$privateDir/drush_dump

if [[ -d $devRootDir/$privateDir ]]; then
    echo $sudoPassword | sudo -S chown -R $linuxApacheUser:$linuxDevUser $devRootDir/$privateDir
fi